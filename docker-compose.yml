services:
    app:
        build:
            context: docker
            dockerfile: Dockerfile
        container_name: customer-app
        volumes:
            - .:/var/www
        depends_on:
            - db
        networks:
            - customer
    db:
        image: postgres:15
        container_name: customer-db
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        ports:
            - "5435:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - customer

    nginx:
        image: nginx:alpine
        container_name: customer-nginx
        ports:
            - "99:80"
        volumes:
            - .:/var/www
            - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - customer

    redis:
        image: redis:latest
        container_name: customer-redis
        ports:
            - "6379:6379"
        volumes:
            - redisdata:/data
        networks:
            - customer

    ngrok:
        image: ngrok/ngrok:latest
        container_name: customer-ngrok
        restart: unless-stopped
        command: http nginx:80
        environment:
            - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
        ports:
            - "4040:4040"
        depends_on:
            - nginx
        networks:
            - customer

volumes:
    pgdata:
    redisdata:
networks:
    customer:
